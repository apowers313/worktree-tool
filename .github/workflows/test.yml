name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node ${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [18, 20]
        include:
          - os: ubuntu-latest
            tmux: true
          - os: macos-latest
            tmux: true
          - os: windows-latest
            tmux: false
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'
    
    - name: Install tmux (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y tmux
    
    - name: Install tmux (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install tmux
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Run unit tests
      run: npm test
    
    - name: Run integration tests
      run: npm run test:integration
      env:
        CI: true
    
    - name: Run e2e tests
      run: npm run test:e2e
      env:
        CI: true
        DISABLE_TMUX: ${{ matrix.tmux == false }}
    
    - name: Upload coverage
      if: matrix.os == 'ubuntu-latest' && matrix.node == 20
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        fail_ci_if_error: false

  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: TypeScript type check
      run: npm run typecheck
    
    - name: ESLint
      run: npm run lint
      if: always()

  build-binaries:
    name: Build binaries
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Package
      run: |
        npm pack
        mkdir -p artifacts
        mv *.tgz artifacts/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: npm-package
        path: artifacts/
